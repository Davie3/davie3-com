name: Dependabot Approve and Merge

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: write
  pull-requests: write

jobs:
  merge-on-approval:
    runs-on: ubuntu-latest
    if: |
      github.event.review.state == 'approved' &&
      github.event.pull_request.user.login == 'dependabot[bot]' &&
      github.event.review.user.login == 'davie3'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Check if review label exists
        id: check-label
        uses: actions/github-script@v8
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(label => label.name);
            const hasReviewLabel = labels.some(l => l.toLowerCase() === 'review');

            console.log('PR labels:', labels);
            console.log('Has review label:', hasReviewLabel);

            core.setOutput('has-review-label', hasReviewLabel.toString());

      - name: Post approval comment
        if: steps.check-label.outputs.has-review-label == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: '✅ Approved - enabling auto-merge with squash method.'
            });

            console.log('✅ Posted approval comment for davie3-approved PR');

      - name: Enable auto-merge with squash
        if: steps.check-label.outputs.has-review-label == 'true'
        run: gh pr merge --auto --squash ${{ github.event.pull_request.number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update branch if behind
        if: steps.check-label.outputs.has-review-label == 'true'
        continue-on-error: true
        run: |
          MERGE_STATE=$(gh pr view ${{ github.event.pull_request.number }} --json mergeStateStatus -q '.mergeStateStatus')
          if [ "$MERGE_STATE" = "BEHIND" ]; then
            echo "PR is behind base branch - updating..."
            gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/update-branch -X PUT
          else
            echo "PR is up to date (state: $MERGE_STATE)"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
