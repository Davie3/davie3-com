name: Dependabot Auto-Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Check if PR should be auto-merged
        id: check-automerge
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const labels = pr.labels.map(label => label.name);

            // Don't auto-merge major updates (unless they're security updates)
            if (labels.includes('major') && !labels.includes('security')) {
              console.log('❌ Major update detected (non-security) - skipping auto-merge');
              return false;
            }

            // Only auto-merge PRs with 'automerge' label
            if (!labels.includes('automerge')) {
              console.log('❌ No automerge label - skipping auto-merge');
              return false;
            }

            // Log the merge type
            if (labels.includes('security')) {
              console.log('✅ Security update - eligible for auto-merge');
            } else {
              console.log('✅ Minor/patch update - eligible for auto-merge');
            }

            core.setOutput('should-merge', 'true');
            return true;

      - name: Wait for CI checks
        if: steps.check-automerge.outputs.should-merge == 'true'
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          running-workflow-name: 'auto-merge'
          allowed-conclusions: success,skipped

      - name: Auto-approve PR
        if: steps.check-automerge.outputs.should-merge == 'true'
        uses: hmarr/auto-approve-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge with squash
        if: steps.check-automerge.outputs.should-merge == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;

            try {
              // Enable auto-merge with squash method
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                event: 'APPROVE',
                body: '✅ Auto-approving safe dependency update'
              });

              // Post comment to trigger Dependabot merge
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: '@dependabot squash and merge'
              });

              console.log('✅ Posted squash and merge command');
            } catch (error) {
              console.error('❌ Error:', error);
              throw error;
            }

      - name: Add success comment
        if: steps.check-automerge.outputs.should-merge == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const labels = pr.labels.map(label => label.name);

            let updateType = 'Minor/patch version update';
            if (labels.includes('security')) {
              updateType = 'Security update';
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: `🤖 This PR has been auto-approved and will be merged automatically once all checks pass.\n\n**Auto-merge criteria met:**\n- ✅ ${updateType}\n- ✅ Has \`automerge\` label\n- ✅ All CI checks passing\n\n**Note:** Major updates (except security) require manual review.`
            });
